package profile;


import com.sforce.soap.metadata.CustomField;
import com.sforce.soap.metadata.CustomObject;
import com.sforce.soap.metadata.DeploymentStatus;
import com.sforce.soap.metadata.FieldType;
import com.sforce.soap.metadata.Metadata;
import com.sforce.soap.metadata.MetadataConnection;
import com.sforce.soap.metadata.SharingModel;
import com.sforce.soap.partner.PartnerConnection;
import com.sforce.soap.partner.SaveResult;
import com.sforce.ws.ConnectionException;
import com.sforce.ws.ConnectorConfig;




/**
 * Login utility.
 */
public class MetadataLoginUtil { 
	static final String USERNAME = "YOUR-USERNAME";
	  static final String PASSWORD = "YOUR-PASSWORD&SECURITY-TOKEN";

	  public static void main(String[] args) throws ConnectionException {
		  
		    ConnectorConfig partnerConfig = new ConnectorConfig();
		    ConnectorConfig metadataConfig = new ConnectorConfig();
		    
		    partnerConfig.setUsername(USERNAME);
		    partnerConfig.setPassword(PASSWORD);
		    //partnerConfig.setTraceMessage(true);
		    
		    @SuppressWarnings("unused")
		    PartnerConnection partnerConnection = com.sforce.soap.partner.Connector.newConnection(partnerConfig);
		    
		    // shove the partner's session id into the metadata configuration then connect
		    metadataConfig.setSessionId(partnerConnection.getSessionHeader().getSessionId());
		    MetadataConnection metadataConnection = com.sforce.soap.metadata.Connector.newConnection(metadataConfig);
		   // AsyncResult[] ars = metadataConnection.create(new CustomObject[] { co });
		    
		    try {
		        CustomObject co = new CustomObject();
		        String name = "MyCustomObject1";
		        co.setFullName(name + "__c");
		        co.setDeploymentStatus(DeploymentStatus.Deployed);
		        co.setDescription("Created by the Metadata API");
		        co.setEnableActivities(true);
		        co.setLabel(name + " Object");
		        co.setPluralLabel(co.getLabel() + "s");
		        co.setSharingModel(SharingModel.ReadWrite);

		        CustomField nf = new CustomField();
		        nf.setType(FieldType.Text);
		        nf.setLabel(co.getFullName() + " Name");
		        co.setNameField(nf);

		        SaveResult[] results = metadataConnection
		                .createMetadata(new Metadata[] { co });

		        for (SaveResult r : results) {
		            if (r.isSuccess()) {
		                System.out.println("Created component: " + r.getFullName());
		            } else {
		                System.out
		                        .println("Errors were encountered while creating "
		                                + r.getFullName());
		                for (Error e : r.getErrors()) {
		                    System.out.println("Error message: " + e.getMessage());
		                    System.out.println("Status code: " + e.getStatusCode());
		                }
		            }
		        }
		    } catch (ConnectionException ce) {
		        ce.printStackTrace();
		    }

	  }

}
